import React, { ReactNode } from 'react';
import Reveal, { MightBeRevealPlugin } from '../../types/reveal.js';
export interface RevealContextType<Plugins extends MightBeRevealPlugin[]> {
    reveal: Reveal<Plugins> | null;
    prism: boolean;
}
export declare const defaultContextValue: RevealContextType<MightBeRevealPlugin[]>;
export declare const RevealContext: React.Context<RevealContextType<MightBeRevealPlugin[]>>;
export interface RevealProviderProps<Plugins extends MightBeRevealPlugin[]> {
    reveal: RevealContextType<Plugins>;
    children: ReactNode;
}
export default function RevealProvider<Plugins extends MightBeRevealPlugin[]>({ reveal, children, }: RevealProviderProps<Plugins>): JSX.Element;
